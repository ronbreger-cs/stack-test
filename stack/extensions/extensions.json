{"blt66dd976173ac6737":{"stackHeaders":{"api_key":"blt2be4b9eac1b7b008"},"urlPath":"/extensions/blt66dd976173ac6737","created_at":"2021-05-25T21:49:48.309Z","updated_at":"2021-05-25T21:49:48.309Z","created_by":"blt49100a71c57545b1","updated_by":"blt49100a71c57545b1","tags":[],"ACL":[],"_version":1,"title":"Color Picker","config":{},"type":"field","data_type":"text","multiple":false,"srcdoc":"<html>\n<head>\n <meta name=\"viewport\"content=\"width=device-width, initial-scale=1.0\"/>\n <link href=\"https://www.contentstack.com/sdks/contentstack-ui-extensions/dist/latest/ui-extension-sdk.css\"rel=\"stylesheet\"type=\"text/css\"media=\"all\">\n <script src=\"https://www.contentstack.com/sdks/contentstack-ui-extensions/dist/latest/ui-extension-sdk.js\"></script>\n</head>\n<body>\n<input type=\"color\"id=\"html5colorpicker\"onchange=\"colorChange()\"onclick=\"setFocus()\">\n<script>\n// initialise Field Extension\nwindow.extensionField ={};\n\n// find color input element\nvar colorPickerElement = document.getElementById(\"html5colorpicker\");\n\nContentstackUIExtension.init().then(function(extension){\n// make extension object globally available\nextensionField = extension;\n\n// update the field height \nextensionField.window.updateHeight();\n\n// Set default color in Contentstack\nvar defaultColor = \"#000000\";\nif(!extensionField.field.getData().length){\nextensionField.field.setData(defaultColor);\n}\n\n// Get current color field value from Contentstack and update the color picker input element\ncolorPickerElement.value = extensionField.field.getData() || defaultColor;\n \n})\n\n// On color change event, pass new value to Contentstack\nfunction colorChange(){\nextensionField.field.setFocus();\nextensionField.field.setData(colorPickerElement.value);\n}\n\nfunction setFocus(){\n extensionField.field.setFocus();\n}\n</script>\n</body>\n</html>"},"bltd60060e9c2891d0e":{"stackHeaders":{"api_key":"blt2be4b9eac1b7b008"},"urlPath":"/extensions/bltd60060e9c2891d0e","created_at":"2021-05-25T21:49:48.476Z","updated_at":"2021-05-25T21:49:48.476Z","created_by":"blt49100a71c57545b1","updated_by":"blt49100a71c57545b1","tags":[],"ACL":[],"_version":1,"title":"Ace Editor","config":{},"type":"field","data_type":"text","multiple":false,"srcdoc":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\"/>\n<title>Ace Editor Extension</title>\n<style>\nbody{ margin:0;}\n#editor{\nmin-height:300px;\n}\n</style>\n<!--\nLoad the Extensions API that is used to communicate with the containing app.\n-->\n<script src=\"https://www.contentstack.com/sdks/contentstack-ui-extensions/dist/latest/ui-extension-sdk.js\"></script>\n<!--\nWe use lodash.throttle to avoid spamming the API with changes\n-->\n<script src=\"https://cdn.jsdelivr.net/npm/lodash@4.17.4/lodash.min.js\"></script>\n<!--\nInclude ace editor core script.\n-->\n<script src=\"https://cdn.jsdelivr.net/npm/ace-builds@1.2.9/src-min-noconflict/ace.js\"></script>\n<!--\nAdd editor theme and syntax highlighting mode scripts.\nFind more here:https://www.jsdelivr.com/package/npm/ace-builds?path=src-min\n-->\n<script src=\"https://cdn.jsdelivr.net/npm/ace-builds@1.2.9/src-min-noconflict/mode-handlebars.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/ace-builds@1.2.9/src-min-noconflict/theme-monokai.js\"></script>\n</head>\n<body>\n<pre id=\"editor\"></pre>\n<script>\n// initialise Field Extension\nwindow.extensionField ={};\n\n// find editor element\nvar editorElement = document.getElementById(\"editor\");\n\n// initialise variable for ace editor plugin\nvar editor ={};\n\n\nContentstackUIExtension.init().then(function(extension){\n\n// make extension object globally available\nextensionField = extension;\n\n\n// update the field height \nextensionField.window.updateHeight();\n\n// Get current ace editor field value from Contentstack and update the element\nvar value = extensionField.field.getData() || '';\n// Configure Ace editor\neditor = ace.edit('editor')\neditor.setTheme('ace/theme/monokai')\neditor.session.setMode('ace/mode/handlebars')\n\nif(value)\neditor.setValue(value)\n//\neditor.on('focus', function(event, editor){\n extensionField.field.setFocus();\n});\n\n// Listen to change events and fire an update every 500ms\neditor.on('change', _.throttle(updateFieldValue, 500,{ leading:false}))\n})\n\n\nfunction updateFieldValue (){\nvar value = editor.getValue()\nextensionField.field.setData(value).catch(function(error){\nconsole.log('error in setting data',error)\n})\n}\n</script>\n</body>\n</html>"},"bltcae834964abe42db":{"stackHeaders":{"api_key":"blt2be4b9eac1b7b008"},"urlPath":"/extensions/bltcae834964abe42db","created_at":"2021-05-25T21:49:48.639Z","updated_at":"2021-05-25T21:49:48.639Z","created_by":"blt49100a71c57545b1","updated_by":"blt49100a71c57545b1","tags":[],"ACL":[],"_version":1,"title":"JSON Editor","config":{},"type":"field","data_type":"json","multiple":false,"srcdoc":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\"/>\n<title>Ace Editor Extension</title>\n<style>\nbody{ margin:0;}\n</style>\n<!--\nLoad the Extensions API that is used to communicate with the containing app.\n-->\n<script src=\"https://www.contentstack.com/sdks/contentstack-ui-extensions/dist/latest/ui-extension-sdk.js\"></script>\n<!--\nWe use lodash.throttle to avoid spamming the API with changes\n-->\n<script src=\"https://cdn.jsdelivr.net/npm/lodash@4.17.4/lodash.min.js\"></script>\n\n<!-- load a custom version of Ace editor -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.6/ace.js\"></script>\n \n<link href=\"https://assets.contentstack.io/v3/assets/blt30b41f7b9a5d7467/bltb6bb4f7db098181f/5b39e605fda2af4e7866b92c/jsoneditor.min.css\"rel=\"stylesheet\"type=\"text/css\">\n<script src=\"https://assets.contentstack.io/v3/assets/blt30b41f7b9a5d7467/blte7fe106cc93cf2bf/5b33888fcfc846f95726af6f/jsoneditor.min.js\"></script>\n \n</head>\n<bodyonclick=\"setFocus()\">\n<div id=\"jsoneditor\"></div>\n\n<script>\n// initialise Field Extension\nwindow.extensionField ={};\n\n// find jsoneditor element\nvar jsoneditorElement = document.getElementById(\"jsoneditor\");\n\n// initialise variable for json editor plugin\nvar jsonEditor ={};\n\n\nContentstackUIExtension.init().then(function(extension){\n\n// make extension object globally available\nextensionField = extension;\n\n\n// update the field height \nextensionField.window.updateHeight(220);\n\n// Get current Json editor field value from Contentstack and update the element\nvar value = extensionField.field.getData() ||{};\n\n\n// Configure Json editor\nvar options ={\nmodes:['text', 'code', 'tree', 'form', 'view'],\nmode:'code',\nace:ace,\nonChange:function(){\nupdateFieldValue();\n}\n};\n\njsonEditor = new JSONEditor(jsoneditorElement, options);\njsonEditor.set(value);\n\n\n\n\n\n})\n\nfunction setFocus(){\nextensionField.field.setFocus();\n}\n\nfunction updateFieldValue (){\nvar value = jsonEditor.get();\nextensionField.field.setData(value).then(function(){\n\t\tconsole.log('data set on child')\n\t}).catch(function(error){\n\t\tconsole.log('error in setting data',error)\n\t})\n}\n</script>\n</body>\n</html>"}}